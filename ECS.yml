---
- name: Deploy ECS Task and Service with EC2
  hosts: localhost
  gather_facts: False
  vars:
    aws_region: "us-east-1"
    ecs_cluster_name: "test-cluster"
    ecs_task_definition_name: "php-ECS5-task-definition"
    ecs_service_name: "php-ecs5-service"
    ecs_container_name: "php-ECS5"
    ecs_container_image: "736116236436.dkr.ecr.us-east-1.amazonaws.com/php-img:latest"
    task_definition: null
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
  tasks:
    - name: Ensure boto3 is installed
      pip:
        name: boto3
        state: present

    - name: Ensure botocore is installed
      pip:
        name: botocore
        state: present

    - name: Create ECS Cluster
      command: "aws ecs create-cluster --cluster-name {{ ecs_cluster_name }}"
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
        AWS_DEFAULT_REGION: "{{ aws_region }}"
      ignore_errors: yes  # Ignore errors if the cluster already exists

    - name: Create ECS Task Definition
      ecs_taskdefinition:
        region: "{{ aws_region }}"
        family: "{{ ecs_task_definition_name }}"
        network_mode: awsvpc
        execution_role_arn: "arn:aws:iam::736116236436:role/ecsTaskExecutionRole"
        containers:
          - name: "{{ ecs_container_name }}"
            image: "{{ ecs_container_image }}"
            portMappings:
              - containerPort: 80
            memoryReservation: 100
            memory: 250
            cpu: 100
        state: present
      register: task_definition

    - name: Register ECS Task Definition
      debug:
        var: task_definition

    - name: Create ECS Service
      ecs_service:
        region: "{{ aws_region }}"
        cluster: "{{ ecs_cluster_name }}"
        service: "{{ ecs_service_name }}"
        task_definition: "{{ ecs_task_definition_name }}"
        launch_type: EC2
        desired_count: 1
        wait: yes
        deployment_configuration:
          maximum_percent: 200
          minimum_healthy_percent: 100
        network_configuration:
          awsvpc_configuration:
            subnets:
              - "subnet-095be323bd97dc9a4"
              - "subnet-0c8e1eaaaff0a0726"
              - "subnet-0e3db30d9fdcb6414"
              - "subnet-04b85618616f2da9d"
              - "subnet-0925766f7ff391b44"
            security_groups:
              - "sg-0a85d937517e6a7b1"
            assign_public_ip: ENABLED  # Ensure public IP assignment for EC2 instances
        state: present
      register: service_result

    - name: Register ECS Service
      debug:
        var: service_result
